// Comandos de investigação de rede

// Equivalência:
1 mega = 1024Kbps

// Converter Kbps em Kbyte
Kbps / 8 = Kbyte

// Mostra o rastreio:
sudo nmap -A -T4 host

// Listando as portas abertas usando NMap:
$ sudo nmap -v ip_address

// Consultar rota de um site:
$ sudo traceroute -I <url ou ip_address>

// Conferir o MAC de ip na rede:
$ arping -f -c <count> -w <timeout> -I <interface=[eth0]> <ip>

// Sample:
$ arping -f -c 1 -w 1 -I wlan0 192.168.10.107

// Listar os computadores na rede Windows:
smbtree

// Listar os IPs na rede (mask: 255.255.255.0 = 24):
$ sudo nmap -sP 192.168.0.0/24

// Capturar pacotes de tráfigo um determinado host:
(# tcpdump -i <interface> -v <host or net> destino -w <filename>)
$ sudo tcpdump -i wlan0 -v host 192.168.0.105 -w junior.pcap

// Descobrir o hostname (alvo Windows, sem Kaspersky)
$ nmblookup -A ip_address

// saber qual o MTU da rede:
// no Linux: 
$ ifconfig

// no Windows: 
netsh interface ipv4 show subinterfaces

// Testar o limite do MTU 1492 usando o byte de dados de 1464 (que somado ao cabeçalho e outros... da 28):
// no Linux:
$ ping -c 4 -s 1464 -M do www.google.com.br

$ ping -c 4 -s 1464 -M do 173.194.118.88

// no Windows:
ping -l 1464 -f www.google.com.br

// Pingar para IPv6 (PC Lau)
$ ping6 -c 4 -I wlan0 fe80::8219:34ff:fe8a:7aff

// alterar o MTU no Linux
sudo ifconfig <interface> mtu <valor>

// Configurar IP e Máscara:
// # ifconfig interface ip netmask máscara
# ifconfig wlan0 192.168.0.150 netmask 255.255.255.0

// Ver a tabela de roteamento (windows: route print):
route -n

// Adicionar o Gateway a tabela de roteamento:
# route add default gw 192.168.0.1

// Meu IP de rede lan
hostname -I

// Descobrir IP dos seus dispositivos conectados
ip addr show

// ou simplesmente:
ip a

// Determinando a interface
ip addr show wlan0

// Configuração de endereço IPv4 fixo

# ifconfig eth0 192.168.1.1 netmask 255.255.255.0  (configura um ip manualmente)

# ifconfig eth0:1 192.168.1.1 netmask 255.255.255.0 (configura um alias, um segundo endereço ip)

# ifconfig eth0.1 192.168.1.1 netmask 255.255.255.0  (configura IP com dot1.q)

# ifconfig eth0 (verifica se a configuração foi realizada com sucesso)

# ifconfig eth0 down (desativa a placa de rede eth0)

# ifconfig eth0 up (ativa a placa de rede eth0)

# ifdown eth0 (desativa a placa de rede eth0)

# ifup eth0 (ativa a placa de rede eth0)

// Roteamento

# route add default gw 192.168.10.10 (configura um gateway)

# route -n (lista a tabela de roteamento)

/* Podemos utilizar o comando 'route' para adicionar rotas estáticas. Por exemplo, imaginemos que a rede da filial seja 192.168.2.0 com máscara 255.255.255.0 e o roteador que da acesso a essa rede seja o ip 192.168.0.200: */

# route add -net 192.168.2.0 mask 255.255.255.0 gw 192.168.0.200

// Para remover uma rota:

# route del -net 192.168.2.0 mask 255.255.255.0 gw 192.168.0.200 

// Remove a rota default

# route del default

// Configurar uma entrada na tabela arp de forma estática

# arp -s 192.168.2.100 00:00:20:13:c1:b5

// Verificar o status fisíco da interface de rede

# mii-tool  -v (mostra se há conectividade na NIC)

// Configuração de endereço IPv4 dinâmico (dhcp)

# dhclient eth0 -v (configura um ip dinâmicamente por dhcp)

// renovar o IP
# dhclient -r <interface>

// Configuração de uma interface para o modo promíscuo

# ifconfig eth0 promisc (configura a interface eth0 para o modo promíscuo)
# ifconfig eth0 -promisc (desativa o modo promíscuo)
# ifconfig eth0 | grep -i PROMISC (verifica e interface eth0 está em modo promíscuo

// Analise de tráfego UDP
# tcpdump -nS -v udp

// Descobrir serviço rodando no sistema e respectivos PIDs
# netstat -ltunp

// Verificar se há conectividade em uma porta
$ nc -v localhost 8081
