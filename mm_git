# Mini Manual Git

# Configuração inicial (básica)
git config --global user.name "Seu nome"
git config --global user.email seu.email.git@gmail.com
git config --global core.editor vim

# Transformar diretório atual em repositório Git :$
git init

# Listar os arquivos que são controlados pelo Git :$
git ls-files

# Ver status dos arquivos no repositório :$
git status

# Adicionar um arquivo para ser rastreado pelo Git (talvés seja necessário usar sudo) :$
git add nome_do_arquivo.extenção
# or use . to all:
git add .
# or use -A to all (mais completo):
git add -A

# Comitar os arquivos do repositório local :$
git commit -m "Mensagem explicativa"
# or add all changes and commit, but new files you have not told Git about are not affected.
git commit -a

# Verificar histórico das alterações comitadas no repositório :$
git log

# Apontar o seu projeto para o GitHub :$
git remote add origin https://github.com/conta_no_github/nome_do_projeto.git

# Empurrando remotamente
git push -u origin master

# Enviar as alterações para o GitHub :$
git push origin master
# se tive usado -u, simplesmente use
git push

# Clonar (cópiar projeto [directory to directory]), em um diretório 
# (this command will create a directory with the name of the project) :$
git clone https://github.com/conta_no_github/nome_do_projeto.git

# Se houver uma cópia do projeto localmente, para atualiza-lo
git pull origin master

# Remover arquivos que já foram submetidos de serem monitorados localmente após serem colocados na lista do .gitignore
git rm --cached filename

# Remover diretório de serem monitorados
git rm -r --cached dir/

# Remover todos (.) os arquivos da lista do git local de forma recursiva
git rm -r .

# Listar as branch
git branch

# Alterar de Branch
git checkout <branch-name>

# Inspecionar um remoto (git remote show [nome-remoto]
git remote show origin

# Alterar url de um repositório remoto
git remote set-url origin https://github.com/conta_no_github/nome_do_projeto.git

# Rescrever o histórico do último commit (depois dê um merge e depois "empurre" para o repositório)
git commit --amend
git pull
git push

# Ver as últimas alterações adicionadas
git diff --staged
